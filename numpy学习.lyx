#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
%不显示日期
\date{}

%自动换行
\XeTeXlinebreaklocale "zh" 
\XeTeXlinebreakskip = 0pt plus 1pt
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "华文仿宋"
\font_sans "default" "华文中宋"
\font_typewriter "default" "华文楷体"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5page%
\topmargin 5pheight%
\rightmargin 2.5page%
\bottommargin 5pheight%
\headheight 2.5pheight%
\headsep 2.5pheight%
\footskip 2.5pheight%
\secnumdepth 3
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
numpy学习笔记
\end_layout

\begin_layout Author
Harbes
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
numpy基础
\end_layout

\begin_layout Itemize
list1 
\end_layout

\begin_deeper
\begin_layout Standard
that's quite an accomplishment.
 if you ask me, I think you derserve a little bit recognition.
\end_layout

\begin_layout Standard
acronym 首字母缩写词
\end_layout

\begin_layout Standard
it is urgent that the acute problem of air pollution in the city be solved.
\end_layout

\begin_layout Standard
there is little aggression among ants from defferent nests.
\end_layout

\begin_layout Standard
self-awareness; public awareness
\end_layout

\begin_layout Standard
apply to graduate school
\end_layout

\begin_layout Standard
Security Council（联合国）安理会
\end_layout

\begin_layout Standard
crevice缺口，裂缝(gap)
\end_layout

\begin_layout Standard
deficiency symptom营养缺乏症状
\end_layout

\begin_layout Standard
sb's devotion of much time to sth
\end_layout

\begin_layout Standard
for a while in the U.S, laisser faire(自由主义) was a popular doctrine.
\end_layout

\begin_layout Standard
enforce strict deadlines on lab work
\end_layout

\begin_layout Standard
how are you faring with your project？你的项目进展如何（fare费用[名]；进展[动，evolve]）
\end_layout

\begin_layout Standard
look forward to sth/doing...期盼
\end_layout

\begin_layout Standard
foul污秽的，肮脏的（disgusting，filthy）
\end_layout

\begin_layout Standard
go to the gym去健身
\end_layout

\begin_layout Standard
advocate the interest of 
\end_layout

\begin_layout Standard
the program will investigate how the brain functions and malfunctions(如何运作以及如何失控
)
\end_layout

\begin_layout Standard
have a heavier course load
\end_layout

\begin_layout Standard
maritime colonization海洋殖民
\end_layout

\begin_layout Standard
predominant支配的，主要的
\end_layout

\begin_layout Standard
prevalent流行的，普遍的
\end_layout

\begin_layout Standard
protagonist主角；stooge配角，陪衬
\end_layout

\begin_layout Standard
solar radiation太阳辐射；radiation therapy 放射疗法
\end_layout

\begin_layout Standard
sapphire蓝宝石
\end_layout

\begin_layout Standard
the purpose of a poem need not inform the reader of anything，but rather
 to evoke feelings，to create a sensual pleasing experience。
\end_layout

\begin_layout Standard
stretch延伸，拉长；stretch out大踏步走；伸手
\end_layout

\begin_layout Standard
strive for 奋斗，争取
\end_layout

\begin_layout Standard
surpluses of food could also be bartered for other commodities
\end_layout

\begin_layout Standard
sweep up the glass
\end_layout

\begin_layout Standard
could you please give me a tow？你可以拉我一把吗？tow 拖，牵引
\end_layout

\begin_layout Standard
bring sb to trial审判某人；clinical trial临床实验；medical trial医学实验
\end_layout

\begin_layout Standard
unearth = dig out
\end_layout

\begin_layout Standard
wipe out 抹掉，除去；消灭，毁灭
\end_layout

\end_deeper
\begin_layout Itemize
list2
\end_layout

\begin_deeper
\begin_layout Standard
an accord with the labor union was reached at about midnight
\end_layout

\begin_layout Standard
food without additives
\end_layout

\begin_layout Standard
look alike 
\end_layout

\begin_layout Standard
alternately spaced
\end_layout

\begin_layout Standard
mineral composition 矿物成分
\end_layout

\begin_layout Standard
dairy product乳制品；dairy cattle奶牛；dairy farming乳品业
\end_layout

\begin_layout Standard
a good deal (of)许多；what is the big deal；deal in 经营
\end_layout

\begin_layout Standard
make a dramatic shift from A to B从A到B的戏剧性转变
\end_layout

\begin_layout Standard
the erosion of the coastal area
\end_layout

\begin_layout Standard
immutable不变的（unchangeable）
\end_layout

\begin_layout Standard
give an impetus to sth 推动
\end_layout

\begin_layout Standard
industry 勤奋
\end_layout

\begin_layout Standard
intelligence quotient智商；an intelligence agent情报员
\end_layout

\begin_layout Standard
intriguing引起兴趣的，吸引人的。the urban life seemed particularly intriguing to those
 raised in rural isolation。
\end_layout

\begin_layout Standard
Crows have marked preferences for certain kinds of foods。乌鸦对某些食物有明显的偏好
\end_layout

\begin_layout Standard
unparalleled 空前的
\end_layout

\begin_layout Standard
paramount 至上的，极为重要的
\end_layout

\begin_layout Standard
the Renaissance文艺复兴
\end_layout

\begin_layout Standard
hair salon美发厅
\end_layout

\begin_layout Standard
specialize in擅长于；专攻
\end_layout

\begin_layout Standard
stem from
\end_layout

\begin_layout Standard
string music 弦乐
\end_layout

\begin_layout Standard
sturdy强壮的；结实的；稳固定
\end_layout

\begin_layout Standard
wrap up全神贯注；完成。 let's wrap up the job and go home
\end_layout

\end_deeper
\begin_layout Itemize
list3
\end_layout

\begin_deeper
\begin_layout Standard
alkali碱
\end_layout

\begin_layout Standard
coarse粗糙的
\end_layout

\begin_layout Standard
copious丰富的，富饶的
\end_layout

\begin_layout Standard
I'm counting on you to make notes from the history lecture。lose count数不清，不知道
\end_layout

\begin_layout Standard
air-cushion vehicle气垫船
\end_layout

\begin_layout Standard
customs duties进口税；customs commissioner税务司
\end_layout

\begin_layout Standard
edifice高大/宏伟的建筑物
\end_layout

\begin_layout Standard
Glacial episode冰河时代
\end_layout

\begin_layout Standard
fade away逐渐凋谢；慢慢减弱
\end_layout

\begin_layout Standard
I heard Joan 哇塞turned down for the graduate fellowship。fellowship奖学金；友谊
\end_layout

\begin_layout Standard
flint 打火石
\end_layout

\begin_layout Standard
forefront 前沿；中心(spotlight)
\end_layout

\begin_layout Standard
all trails have to be checked daily to make sure they are groomed probably。
\end_layout

\begin_layout Standard
be infested with 多得成灾。 infest骚扰；大批滋生
\end_layout

\begin_layout Standard
melanin 黑色素
\end_layout

\begin_layout Standard
be notorious for 因...而臭名昭著
\end_layout

\begin_layout Standard
pathology反常，变态
\end_layout

\begin_layout Standard
quench one's thirst解渴；quench a fire/flames灭火
\end_layout

\begin_layout Standard
roost栖息处，鸟巢。rule the roost当家。rooster公鸡
\end_layout

\begin_layout Standard
be superior to
\end_layout

\begin_layout Standard
surrender to向..投降
\end_layout

\begin_layout Standard
suspension bridge吊桥。suspension悬架；暂停
\end_layout

\begin_layout Standard
unadorned未装饰的，朴实的
\end_layout

\begin_layout Standard
unprecedented空前的（unparalleled）
\end_layout

\end_deeper
\begin_layout Standard
list 5
\end_layout

\begin_layout Standard
ailment小病
\end_layout

\begin_layout Standard
chubby丰满的，圆胖的
\end_layout

\begin_layout Standard
consult with向...请教/咨询
\end_layout

\begin_layout Standard
credential证明书(certificate)，文凭(diploma)，资格(qualification)。None of the people
 who applied for the job has the required credentials。
\end_layout

\begin_layout Standard
detergent清洁剂
\end_layout

\begin_layout Standard
be dominant in sth主宰
\end_layout

\begin_layout Standard
facilitate推动，促进
\end_layout

\begin_layout Standard
frenzy狂暴。Adams lamented[痛惜，哀悼；抱怨] the role that the new frenzy for business
 was playing in eroding traditional values。
\end_layout

\begin_layout Standard
foremost最著名的，最重要的（leading，chief）
\end_layout

\begin_layout Standard
inert懒惰的。inert element惰性元素
\end_layout

\begin_layout Standard
the mental was burned with an intense flash
\end_layout

\begin_layout Standard
jolt使震惊（shock）
\end_layout

\begin_layout Standard
leftover[常作复数形式出现]剩余物(remnant)；剩饭菜。 there weren't many leftovers from yesterday
\end_layout

\begin_layout Standard
an overhaul of 对...的彻查/仔细检查
\end_layout

\begin_layout Standard
profound深远的(deep-seated)；知识渊博的(having intellectual depth and insight)；深奥的(diffic
ult to undrestand)
\end_layout

\begin_layout Standard
prompt促进，推动 his dislike for hot weather prompted him to move north。
\end_layout

\begin_layout Standard
replenish添加；补充 be replenished with
\end_layout

\begin_layout Standard
scurry急跑（rush，scamper）
\end_layout

\begin_layout Standard
sluggish行动迟缓的；不活波的。 a sluggish market不景气的市场
\end_layout

\begin_layout Standard
soft spot弱点；软弱不振的企业
\end_layout

\begin_layout Standard
squash南瓜（pumpkin）
\end_layout

\begin_layout Standard
get stuck 坚持不动摇
\end_layout

\begin_layout Standard
substantiate证实（verify）。 the hypothesis was substantiated soon afterward
 by the discovery。
\end_layout

\begin_layout Standard
supreme最高的；最重要的。 supreme court最高法院
\end_layout

\begin_layout Standard
a trace of 少量
\end_layout

\begin_layout Standard
in vast numbers大量的；the vast majority绝大多数
\end_layout

\begin_layout Standard
watercourse水道，河道
\end_layout

\begin_layout Itemize
N-dimensional array type（“ndarray”）： a collection of 
\begin_inset Quotes eld
\end_inset

item
\begin_inset Quotes erd
\end_inset

of the same type.
\end_layout

\begin_layout Itemize
all ndarrays are homogenous: every item takes up the same size block of
 memory, and all blocks are interpreted in exactly the same way(
\begin_inset Formula $data-type$
\end_inset

).
\end_layout

\begin_layout Itemize
three fundamental objects used describe the data in an array:
\end_layout

\begin_deeper
\begin_layout Itemize
the ndarray itself
\end_layout

\begin_layout Itemize
the data-type object that describes the layout of a single fixed-size element
 of the array
\end_layout

\begin_layout Itemize
the array-scalar Python object that is returned when a single element of
 the array is accessed
\end_layout

\end_deeper
\begin_layout Section
ndarray
\end_layout

\begin_layout Itemize
一个例子：x=np.array([[1,2,3],[4,5,6]],np.int32)
\end_layout

\begin_deeper
\begin_layout Itemize
type(x) 
\end_layout

\begin_deeper
\begin_layout Standard
Out[4]: numpy.ndarray 
\end_layout

\end_deeper
\begin_layout Itemize
x.shape
\end_layout

\begin_deeper
\begin_layout Standard
Out[5]: (2, 3) 
\end_layout

\end_deeper
\begin_layout Itemize
x.dtype 
\end_layout

\begin_deeper
\begin_layout Standard
Out[6]: dtype('int32') →
\begin_inset Formula $data-type$
\end_inset

，注意与type(x)区分开
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
属性(attribute)与方法(method)
\end_layout

\begin_layout Itemize
array的属性(attribute)
\end_layout

\begin_deeper
\begin_layout Itemize
T
\end_layout

\begin_layout Itemize
data
\end_layout

\begin_layout Itemize
dtype：data-type of the array's elements
\end_layout

\begin_layout Itemize
flags
\end_layout

\begin_layout Itemize
flat：在array上的一维迭代器
\end_layout

\begin_deeper
\begin_layout Standard
例如：np.array(x.flat) 
\end_layout

\begin_layout Standard
Out[11]: array([1, 2, 3, 4, 5, 6], dtype=int32) 
\end_layout

\begin_layout Standard
【注意：flat属性是一个可以赋值的属性，该赋值会导致原array对应的元素数值发生变化
\end_layout

\end_deeper
\begin_layout Itemize
imag：虚部
\end_layout

\begin_layout Itemize
real：实部
\end_layout

\begin_layout Itemize
size：元素的个数，例如：x.size=6
\end_layout

\begin_layout Itemize
itemsize：array中元素的字节(bytes)长度，例如：x.itemsize=4（因为int32）
\end_layout

\begin_layout Itemize
nbytes：array中所有元素总的字节数，例如：x.nbytes=24
\end_layout

\begin_layout Itemize
ndim：维度数
\end_layout

\begin_layout Itemize
shape：维度tuple
\end_layout

\begin_layout Itemize
strides：array中不同维度下的字节组成的tuple
\end_layout

\begin_layout Itemize
ctypes
\end_layout

\begin_layout Itemize
base
\end_layout

\end_deeper
\begin_layout Itemize
methods
\end_layout

\begin_deeper
\begin_layout Itemize
all([axis,out,keepdims])：如果没有axis的话，如果所有元素都是True，则返回“一个”True
\end_layout

\begin_layout Itemize
any([axis,out,keepdims]):如果没有axis的话，如果存在元素是True，则返回“一个”True
\end_layout

\begin_layout Itemize
argmax([axis,out])：沿着给定的axis，返回最大值所在的indices；如果不指定axis，则返回的是最大值在“一维迭代器”中的位置
\end_layout

\begin_layout Itemize
argmin([axis,out])：沿着给定的axis，返回最小值所在的indices；同上
\end_layout

\begin_layout Itemize
argpartition(
\begin_inset Formula $k$
\end_inset

th[,axis,kind,order])：
\end_layout

\begin_layout Itemize
argsort([axis,kind,order])
\end_layout

\begin_layout Itemize
astype(dtype,[,order,casting,subok,copy])：copy of the array, cast to a specified
 type
\end_layout

\begin_layout Itemize
byteswap(inplace)
\end_layout

\begin_layout Itemize
choose(choices[,out,mode])：use an index array to construct a new array from
 a set of choices
\end_layout

\begin_layout Itemize
clip([min,max,out])：return an array whose values are limited to 
\begin_inset Formula $[min,max]$
\end_inset


\end_layout

\begin_layout Itemize
compress(condition[,axis,out])：return selected slices of this array along
 given axis
\end_layout

\begin_layout Itemize
conj()：complex-conjugate all elements
\end_layout

\begin_layout Itemize
conjugate()：return the complex conjugate, element-wise
\end_layout

\begin_layout Itemize
copy(order)：return a copy of the array
\end_layout

\begin_layout Itemize
cumprod([axis,dtype,out])
\end_layout

\begin_layout Itemize
cumsum([axis,dtype,out])
\end_layout

\begin_layout Itemize
diagonal([offset,axis1,axis2])
\end_layout

\begin_layout Itemize
dot(b[,out])
\end_layout

\begin_layout Itemize
dump(file)
\end_layout

\begin_layout Itemize
dumps()
\end_layout

\begin_layout Itemize
fill(value)：fill the array with a scalar value(所有的数值都会变成the scalar value)
\end_layout

\begin_layout Itemize
flatten([order])： return a copy of the array collapsed into one dimension，与属性中的f
lat功能类似
\end_layout

\begin_layout Itemize
getfield(dtype[,offset])：return a field of the given array as a certain
 type
\end_layout

\begin_layout Itemize
item(*args)：copu an element of an array to a standard Python scalar and
 return it 
\end_layout

\begin_layout Itemize
itemset([axis,out])：insert scalar into an array(scalar is cast to array's
 dtype, if possible)
\end_layout

\begin_layout Itemize
max([axis,out])：return the maximum along a give axis
\end_layout

\begin_layout Itemize
mean([axis, dtype,out,keepdims])
\end_layout

\begin_layout Itemize
min([axis,out,keepdims])
\end_layout

\begin_layout Itemize
newbyteorder([new_order])：return the array with the same data viewed with
 a different byte order
\end_layout

\begin_layout Itemize
nonzero()：return the indices of the elements that non-zeros
\end_layout

\begin_layout Itemize
partition(
\begin_inset Formula $k$
\end_inset

th[,axis,kind,order])：只保证
\begin_inset Formula $k$
\end_inset

th位置上的元素等于正确排序的元素，其他位置上的不管(理论上速度应该比sort快一点)
\end_layout

\begin_layout Itemize
prod([axis,dtype,out,keepdims])
\end_layout

\begin_layout Itemize
ptp([axis,out])：peak to peak(max-min) value along the given axis
\end_layout

\begin_layout Itemize
put(indices,values[,mode])：
\end_layout

\begin_layout Itemize
ravel([order])：return a flattened array
\end_layout

\begin_deeper
\begin_layout Standard
ravel只是请求返回一个展平后数据的view；而flatten要求新分配内存
\end_layout

\end_deeper
\begin_layout Itemize
repeat(repeats[,axis])：repeat element of an array
\end_layout

\begin_layout Itemize
reshape(shape[,order])
\end_layout

\begin_deeper
\begin_layout Standard
a=np.arange(24).reshape((2,3,4))
\end_layout

\begin_layout Standard
除了使用reshape，还可以使用shape或者resize：a.reshape((4,6))效果等同于a.shape=(4,6) 或者a.resize((4,6))
\end_layout

\end_deeper
\begin_layout Itemize
resize(new_shape[refcheck])：change shape and size of array in-place
\end_layout

\begin_deeper
\begin_layout Standard
当有其他变量'挂'在变量
\begin_inset Formula $a$
\end_inset

下时，需要传入参数refcheck=False
\end_layout

\end_deeper
\begin_layout Itemize
round([decimals,out])
\end_layout

\begin_layout Itemize
searchsorted(v[,side,sorter])：find indices where elemets of v should be
 inserted into a maintain order
\end_layout

\begin_layout Itemize
setfield(val,dtype[,offset])
\end_layout

\begin_layout Itemize
setflags([write,align,uic])
\end_layout

\begin_layout Itemize
sort([axis,kind,order])
\end_layout

\begin_layout Itemize
squeeze([axis])：remove the single-dimensional entries from the shape of
 
\begin_inset Formula $a$
\end_inset


\end_layout

\begin_layout Itemize
std([axis,dtype,out,ddof,keepdims])
\end_layout

\begin_layout Itemize
sum([axis,dtype,out,keepdims])
\end_layout

\begin_layout Itemize
swapaxes(axis1,axis2)【transpose？】
\end_layout

\begin_layout Itemize
take(indices[,axis,out,mode])：return an array formed from the elements of
 
\begin_inset Formula $a$
\end_inset

 at the given indices
\end_layout

\begin_layout Itemize
tobytes([order])
\end_layout

\begin_layout Itemize
tofile(fid[,sep,format])
\end_layout

\begin_layout Itemize
tolist()
\end_layout

\begin_layout Itemize
tostring([order])
\end_layout

\begin_layout Itemize
trace([offset,axis1,axis2,dtype,out])
\end_layout

\begin_layout Itemize
transpose(*axes)
\end_layout

\begin_layout Itemize
var([axis,dtype.out,ddof,keepdims])
\end_layout

\begin_layout Itemize
view(dtype,type)：new view of array with the same data
\end_layout

\end_deeper
\begin_layout Subsection
数组的组合
\end_layout

\begin_layout Itemize
首先创建一些数组
\end_layout

\begin_deeper
\begin_layout Standard
a=np.arange(9).reshape(3,3)
\end_layout

\begin_layout Standard
b=a*2
\end_layout

\end_deeper
\begin_layout Itemize
水平组合（hstack、concatenate）
\end_layout

\begin_deeper
\begin_layout Itemize
np.hstack((a,b))
\end_layout

\begin_layout Standard
Out[83]: array([[ 0, 1, 2, 0, 2, 4], [ 3, 4, 5, 6, 8, 10], [ 6, 7, 8, 12,
 14, 16]]) 
\end_layout

\begin_layout Itemize
也可以使用：np.concatenate((a,b),axis=1)
\end_layout

\end_deeper
\begin_layout Itemize
垂直组合(vstack、concatenate)
\end_layout

\begin_deeper
\begin_layout Itemize
np.vstack((a,b))
\end_layout

\begin_layout Itemize
或者：np.concatenate((a,b),axis=0)
\end_layout

\end_deeper
\begin_layout Itemize
深度组合（dstack）
\end_layout

\begin_deeper
\begin_layout Itemize
np.dstack((a,b))
\end_layout

\begin_deeper
\begin_layout Standard
array([[[ 0, 0], [ 1, 2], [ 2, 4]], [[ 3, 6], [ 4, 8], [ 5, 10]], [[ 6,
 12], [ 7, 14], [ 8, 16]]]) 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
列组合（column_stack）
\end_layout

\begin_deeper
\begin_layout Itemize
对于一维数据，将按照列方向进行组合：c=np.arange(2);d=2*c;np.column_stack((c,d))
\end_layout

\begin_deeper
\begin_layout Standard
array([[0, 0], [1, 2]]) 【注意，如果使用深度组合，结果会高一个维度：array([[[0, 0], [1, 2]]])
 】
\end_layout

\end_deeper
\begin_layout Itemize
对于二维数据，column_stack与hstack效果相同：np.column_stack((a,b))
\end_layout

\begin_deeper
\begin_layout Standard
array([[ 0, 1, 2, 0, 2, 4], [ 3, 4, 5, 6, 8, 10], [ 6, 7, 8, 12, 14, 16]])
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
行组合（row_stack）
\end_layout

\begin_deeper
\begin_layout Itemize
对于一维数据，直接层叠起来组成一个二维数据：np.row_stack((c,d))
\end_layout

\begin_deeper
\begin_layout Standard
array([[0, 1], [0, 2]]) 
\end_layout

\end_deeper
\begin_layout Itemize
对于二维数据，与vstack效果相同：np.row_stack((a,b))
\end_layout

\begin_deeper
\begin_layout Standard
array([[ 0, 1, 2], [ 3, 4, 5], [ 6, 7, 8], [ 0, 2, 4], [ 6, 8, 10], [12,
 14, 16]]) 
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
数组的分割[注意分割的结果都是列表]
\end_layout

\begin_layout Itemize
水平分割（hsplit、split）
\end_layout

\begin_deeper
\begin_layout Itemize
np.hsplit(a,3)：沿着水平方向分割为3个大小相同(必须相等，否则会报错，因此参数选取要适当)的子数组
\end_layout

\begin_deeper
\begin_layout Standard
[array([[0], [3], [6]]), array([[1], [4], [7]]), array([[2], [5], [8]])]
 
\end_layout

\end_deeper
\begin_layout Itemize
或者使用：np.split(a,3,axis=1)
\end_layout

\end_deeper
\begin_layout Itemize
垂直分割（vsplit、split）
\end_layout

\begin_deeper
\begin_layout Itemize
np.vsplit(a,3)
\end_layout

\begin_deeper
\begin_layout Standard
[array([[0, 1, 2]]), array([[3, 4, 5]]), array([[6, 7, 8]])] 
\end_layout

\end_deeper
\begin_layout Itemize
或者：np.split(a,3,axis=0)
\end_layout

\end_deeper
\begin_layout Itemize
深度分割（dsplit、split）
\end_layout

\begin_deeper
\begin_layout Itemize
c=np.arange(27).reshape(3,3,3);np.dsplit(c,3)
\end_layout

\begin_deeper
\begin_layout Standard
[array([[[ 0], [ 3], [ 6]], [[ 9], [12], [15]], [[18], [21], [24]]]), array([[[
 1], [ 4], [ 7]], [[10], [13], [16]], [[19], [22], [25]]]), array([[[ 2],
 [ 5], [ 8]], [[11], [14], [17]], [[20], [23], [26]]])] 
\end_layout

\end_deeper
\begin_layout Itemize
或者：np.split(c,3,axis=2)
\end_layout

\begin_deeper
\begin_layout Standard
[array([[[ 0], [ 3], [ 6]], [[ 9], [12], [15]], [[18], [21], [24]]]), array([[[
 1], [ 4], [ 7]], [[10], [13], [16]], [[19], [22], [25]]]), array([[[ 2],
 [ 5], [ 8]], [[11], [14], [17]], [[20], [23], [26]]])] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
数组的转换
\end_layout

\begin_layout Itemize
利用tolist函数转换成python列表
\end_layout

\begin_deeper
\begin_layout Itemize
a.tolist()
\end_layout

\begin_deeper
\begin_layout Standard
[[0, 1, 2], [3, 4, 5], [6, 7, 8]] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
使用astype函数转换数据类型
\end_layout

\begin_deeper
\begin_layout Itemize
a=np.array([1+1.j,3+2.j]);a.astype(int)。【注意：此处写虚数时，一定要在虚部的系数和'j'之间加上小点'.'】
\end_layout

\end_deeper
\begin_layout Chapter
numpy中的函数
\end_layout

\begin_layout Section
常用函数
\end_layout

\begin_layout Subsection
读写文件
\end_layout

\begin_layout Itemize
创建一个矩阵并将其存储到文件中
\end_layout

\begin_deeper
\begin_layout Itemize
i2=np.eye(2)
\end_layout

\begin_deeper
\begin_layout Standard
np.savetxt('eye.txt',i2)，结果就会咋python工作目录下创建一个名为“eye.txt”的文件
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
读入CSV文件
\end_layout

\begin_layout Itemize
c,v=np.loadtxt('csv_name.csv',delimiter=',',usecols=(6,7),unpack=True)。【注意：usecols
的传入参数为一个元组，它指定我们要获取的数据列，例子是获取第7字段-第8字段的数据；unpack=True试讲不同列的数据分开存储】
\end_layout

\begin_layout Subsection
成交量加权平均价格(VWAP)
\end_layout

\begin_layout Itemize
假定价格数据是
\begin_inset Formula $c$
\end_inset

，成交量数据是
\begin_inset Formula $v$
\end_inset

，则：vwap=np.average(c,weights=v)
\end_layout

\begin_layout Itemize
类似的，时间加权平均价格(TWAP)：twap=np.average(c,weights=t)
\end_layout

\begin_layout Subsection
取值范围
\end_layout

\begin_layout Itemize
假定每日股价的最高价记录在
\begin_inset Formula $h$
\end_inset

中，每日最低价记录在
\begin_inset Formula $l$
\end_inset

中，则最高价中的最大值与最低价中的最小值分别为：np.max(h);np.min(l)
\end_layout

\begin_layout Itemize
最高价数据的极差与最低价数据的极差：np.ptp(h);np.ptp(l)
\end_layout

\begin_layout Subsection
计算真实波动幅度均值(ATR,average of true range?)
\end_layout

\begin_layout Itemize
ATR是基于前N个交易日的最高价和最低价，例如取近20个交易日数据
\end_layout

\begin_deeper
\begin_layout Standard
N=20;h=h[-N:];l=l[-N:]
\end_layout

\end_deeper
\begin_layout Itemize
前一个交易日的收盘价
\end_layout

\begin_deeper
\begin_layout Itemize
previousclose=c[-N-1:-1]
\end_layout

\end_deeper
\begin_layout Itemize
计算每天的真实波动幅度
\end_layout

\begin_deeper
\begin_layout Itemize
truerange=np.maximum(h-l,h-previousclose,previousclose-l)
\end_layout

\end_deeper
\begin_layout Itemize
计算ATR
\end_layout

\begin_deeper
\begin_layout Standard
atr=np.zeros(N);atr[0]=np.mean(truerange)。再用：
\begin_inset Formula $\frac{(N-1)PATR+TR}{N}$
\end_inset

计算其他数值
\end_layout

\begin_layout Standard
for i in range(N):
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

atr[i]=(N-1)*atr[i-1]+truerange[i]
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

atr[i]/=N
\end_layout

\end_deeper
\begin_layout Subsection
简单移动平均
\end_layout

\begin_layout Itemize
一般来说，移动平均只需要简单的循环和均值函数就可以计算得出，但numpy中可以使用更优的convolve(卷积)函数
\end_layout

\begin_deeper
\begin_layout Standard
N=5;weights=np.ones(N)/N
\end_layout

\begin_layout Standard
simple_ma=np.convolve(weights,c,mode='valid')
\end_layout

\end_deeper
\begin_layout Subsection
指数移动平均线
\end_layout

\begin_layout Itemize
N=7;weights=np.exp(np.linspace(-1,0,N));weights=weights/weights.sum()
\end_layout

\begin_deeper
\begin_layout Standard
ema=np.convolve(weights,c,mode='valid')
\end_layout

\end_deeper
\begin_layout Subsection
布林带(Bollinger band)
\end_layout

\begin_layout Itemize
布林带是一种技术指标(以发明者John Bollinger的名字命名)，用以刻画价格波动的区间，它的基本形态是由三条轨道线组成的带状通道(中轨和上、下轨各一条)
。其中，中轨是简单移动平均；上轨是比简单移动平均高两倍标准差的距离；下轨是比简单移动平均低两倍标准差的距离。
\end_layout

\begin_deeper
\begin_layout Standard
deviation=[] 
\end_layout

\begin_layout Standard
C=len(c) 
\end_layout

\begin_layout Standard
for i in range(N-1,C):
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if i+N<C: 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

dev=c[i:i+N] 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

else: 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

dev=c[-N:] 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

averages=np.zeros(N) 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

averages.fill(sma[i-N-1]) 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

dev=dev-averages 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

dev=dev**2 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

dev=np.sqrt(np.mean(dev)) 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

deviation.append(dev)
\end_layout

\begin_layout Standard
deviation=2*np.array(deviation) 
\end_layout

\begin_layout Standard
upperBB=sma+deviation 
\end_layout

\begin_layout Standard
lowerBB=sma-deviation 
\end_layout

\begin_layout Standard
plt.plot(c[N-1:],label='raw') 
\end_layout

\begin_layout Standard
plt.plot(sma,label='sma') 
\end_layout

\begin_layout Standard
plt.plot(upperBB) 
\end_layout

\begin_layout Standard
plt.plot(lowerBB) 
\end_layout

\begin_layout Standard
plt.legend() 
\end_layout

\begin_layout Standard
plt.show() 
\end_layout

\end_deeper
\begin_layout Itemize
【注意：pandas中有rolling_std这种函数】
\end_layout

\begin_layout Subsection
趋势线
\end_layout

\begin_layout Itemize
趋势线是根据股价走势图上很多所谓的枢轴点绘成的曲线。
\end_layout

\begin_deeper
\begin_layout Itemize
首先确定枢轴点的位置，这里假设为最高价、最低价和收盘价的算术平均值。
\end_layout

\begin_deeper
\begin_layout Standard
pivots=(h+l+c)/3
\end_layout

\begin_layout Standard
从这些枢轴点出发，可以推导出所谓的阻力位和支撑位。阻力位是指股价上升时遇到的阻力，在转跌前的最高价位；支撑位是股价下跌时遇到支撑，在反弹前的最低价格。需要提醒的
是阻力位和支撑位并非客观存在，它们只是一个估计量。定义当日股价区间为最高价和最低价之差。
\end_layout

\end_deeper
\begin_layout Itemize
定义一个函数，用直线
\begin_inset Formula $y=at+b$
\end_inset

来拟合数据
\end_layout

\begin_deeper
\begin_layout Standard
def fit_line(t,y):
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

A=np.vstack([t,np.ones_like(t)]).T
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return np.linalg.pinv(A.T@A)*A.T@y
\end_layout

\end_deeper
\begin_layout Itemize
假设支撑位在枢轴点下方一个当日股价区间的位置，阻力位在枢轴点上方一个当日股价区间的位置，据此拟合支撑位和阻力位的趋势线
\end_layout

\begin_deeper
\begin_layout Standard
t=np.arange(len(c))
\end_layout

\begin_layout Standard
s_para=fit_line(t,pivots-(h-l))
\end_layout

\begin_layout Standard
r_para=fit_line(t,pivots+(h-l))
\end_layout

\begin_layout Standard
support=s_para[0]*t+s_para[1]
\end_layout

\begin_layout Standard
resistance=r_para[0]*t+r_para[1]
\end_layout

\end_deeper
\begin_layout Itemize
【注意:需要检查有多少数据点落在支撑位和阻力位之间，如果之间的数据少，则没有意义】
\end_layout

\end_deeper
\begin_layout Subsection
数组修剪和压缩
\end_layout

\begin_layout Itemize
数组修剪就是将数组中比给定的最大值更大的元素设定为最大值，比给定的最小值更小的元素设定为最小值
\end_layout

\begin_deeper
\begin_layout Itemize
np.cilp(min,max)
\end_layout

\end_deeper
\begin_layout Itemize
数组压缩就是返回一个根据给定条件筛选后的数组
\end_layout

\begin_deeper
\begin_layout Itemize
np.compress(a>2)
\end_layout

\end_deeper
\begin_layout Section
便捷函数
\end_layout

\begin_layout Subsection
净额成交量
\end_layout

\begin_layout Itemize
成交量(volume)是投资中一个非常重要的变量，它可以表示价格波动的大小。OBV(On-Balance Volume，净额成交量或能量潮指标)是最简单的股价指
标之一，可由当日收盘价、前一天的收盘价以及当日成交量计算得出
\end_layout

\begin_deeper
\begin_layout Itemize
假定
\begin_inset Formula $c$
\end_inset

表示收盘价数据，
\begin_inset Formula $v$
\end_inset

表示成交量数据。
\end_layout

\begin_deeper
\begin_layout Standard
change=np.diff(c)
\end_layout

\begin_layout Standard
signs=np.sign(change)#或者使用signs=np.piecewise(change,[change<0,change>0],[-1,1])
\end_layout

\begin_layout Standard
v[1:]*signs #OBV
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
交易过程模拟(抄底)，避免使用循环
\end_layout

\begin_layout Itemize
使用np.vectorize函数相当于Python中的map函数，可以减少使用循环的次数。
\end_layout

\begin_deeper
\begin_layout Itemize
假定股票4价数据为
\begin_inset Formula $o,h,l,c$
\end_inset

，尝试以比开盘价低一点的价格买入，如果买入价不在当日股票价格范围内，则尝试买入失败，没有获利也没有亏损。
\end_layout

\begin_deeper
\begin_layout Standard
def calc_profit((open,high,low,close)):
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

buy=open*0.99
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if low<buy<high:
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return (close-buy)/buy
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

else:
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return 0
\end_layout

\end_deeper
\begin_layout Itemize
func=np.vectorize(calc_profit)#调用vectorize病给定calc_profit函数作为参数
\end_layout

\begin_layout Itemize
profits=func(o,h,l,c)
\end_layout

\end_deeper
\begin_layout Subsection
数据平滑：使用hanning函数平滑数据
\end_layout

\begin_layout Itemize
调用hanning函数是为了计算权重
\end_layout

\begin_deeper
\begin_layout Itemize
N=8;weights=np.hanning(N)
\end_layout

\begin_layout Itemize
smooth_c=np.convolve(weights,c,'valid')
\end_layout

\end_deeper
\begin_layout Section
矩阵和通用函数
\end_layout

\begin_layout Subsection
创建矩阵
\end_layout

\begin_layout Itemize
A=np.mat('1 2 3;4 5 6 ;7 8 9')或者A=np.mat(np.arange(1,10).reshape(3,3))
\end_layout

\begin_layout Itemize
转置：A.T
\end_layout

\begin_layout Itemize
逆：A.I（计算复杂度为O(n3)）
\end_layout

\begin_layout Subsection
从已有的矩阵创建新的矩阵
\end_layout

\begin_layout Itemize
a=np.eye(2);b=2*a
\end_layout

\begin_layout Itemize
创建复合矩阵
\end_layout

\begin_deeper
\begin_layout Itemize
np.bmat('a b;a b')
\end_layout

\end_deeper
\begin_layout Subsection
斐波那契数列
\end_layout

\begin_layout Itemize
Fibonacci数列是基于递推关系生成的，如果用numpy代码来递归得出数列的话是比较麻烦的，但是我们可以使用矩阵或者黄金分割公式两种方法来获得它。
\end_layout

\begin_deeper
\begin_layout Itemize
F=np.matrix([[1,1],[1,0]]);于是斐波那契数列第n个数为：
\begin_inset Formula $F^{n-1}$
\end_inset

中的第一行第一列，即(F**7)[0,0] 
\end_layout

\begin_layout Itemize
sqrt5=np.sqrt(5);phi=(1+sqrt5)/2;第n个数为：fibonacci_n=np.rint((phi**n-(-1/phi)**n)/sq
rt5)#【注意，np.rint函数是对浮点数取整】
\end_layout

\end_deeper
\begin_layout Section
深入学习numpy模块
\end_layout

\begin_layout Subsection
线性代数
\end_layout

\begin_layout Itemize
求矩阵的逆np.linalg.inv()或者广义逆矩阵(Moore-Penrose pseudoinverse)：np.linalg.pinv()。计算广义逆矩阵会用到
下面的奇异值分解；inv函数只接受方阵，而pinv不受限制
\end_layout

\begin_deeper
\begin_layout Standard
a=np.mat('0 1 2;1 0 3;4 -3 8')
\end_layout

\begin_layout Standard
np.linalg.inv(a)
\end_layout

\end_deeper
\begin_layout Subsection
求解线性方程
\end_layout

\begin_layout Itemize
np.linalg.solve()
\end_layout

\begin_deeper
\begin_layout Standard
a=np.mat('1 -2 1;0 2 -8;-4 5 9')
\end_layout

\begin_layout Standard
b=np.array([0,8,-0])
\end_layout

\begin_layout Standard
x=np.linalg.solve(a,b)
\end_layout

\end_deeper
\begin_layout Subsection
特征值和特征向量
\end_layout

\begin_layout Itemize
np.linalg.eigvals()返回矩阵特征值；np.linalg.eig()返回特征值和对应的特征向量的元组
\end_layout

\begin_deeper
\begin_layout Standard
a=np.mat('3 -2;1 0')
\end_layout

\begin_layout Standard
np.linalg.eigvals(a)
\end_layout

\begin_layout Standard
np.linalg.eig(a)
\end_layout

\end_deeper
\begin_layout Subsection
奇异值分解
\end_layout

\begin_layout Itemize
SVD(singular value decomposition，奇异值分解)是一种因子分解运算，它是特征值分解的一种推广，使用np.linalg.svd()函数可
获得。SVD分解的形式：
\begin_inset Formula $M=U\varSigma V^{*}$
\end_inset

，其中,U和V是正交矩阵，Sigma包含输入矩阵的奇异值；星号表示厄米共轭(Hermitian conjugate)或共轭转置(conjugate
 transpose)
\end_layout

\begin_deeper
\begin_layout Standard
a=np.array([[4,11,14],[8,7,-2]])
\end_layout

\begin_layout Standard
U,Sigma,V=np.linalg.svd(a,full_matrices=False)
\end_layout

\end_deeper
\begin_layout Subsection
快速傅里叶变换
\end_layout

\begin_layout Itemize
它是一种高效计算离散傅立叶变换(DFT，discrete Fourier Transform)的算法，使用np.fft模块。
\end_layout

\begin_deeper
\begin_layout Standard
首先，创建一个余弦波：x=np.linspace(0,2*np.pi,30);wave=np.cos(x)
\end_layout

\begin_layout Standard
transformed=np.fft.fft(wave)
\end_layout

\begin_layout Standard
可以通过np.fft.ifft还原信号：np.fft.ifft(transformed)；通过np.abs(np.fft.ifft(transformed)-wave)检验与
原信号的差距
\end_layout

\end_deeper
\begin_layout Itemize
图形展示
\end_layout

\begin_deeper
\begin_layout Standard
transformed=np.fft.fft(wave).real #快速傅立叶变换结果取实部
\end_layout

\begin_layout Standard
plt.plot(x,wave,label='cos')
\end_layout

\begin_layout Standard
plt.plot(x,transformed,label='trans') 
\end_layout

\begin_layout Standard
plt.legend()
\end_layout

\begin_layout Standard
plt.show()
\end_layout

\end_deeper
\begin_layout Subsection
随机数
\end_layout

\begin_layout Standard
随机数在Monte Carlo模拟、随机积分等很多方面都有应用。随机数发生器的核心算法是基于Mersenne Twister algorithm的。
\end_layout

\begin_layout Section
专用函数
\end_layout

\begin_layout Subsection
平滑数据中常用的几种窗口函数
\end_layout

\begin_layout Itemize
巴特利特窗口(Bartlett window)是一种三角平滑窗口，使用np.bartlett()
\end_layout

\begin_deeper
\begin_layout Standard
n=42;window=np.bartlett(n)
\end_layout

\end_deeper
\begin_layout Itemize
布莱克曼窗口(Blackman window)形式上为三项余弦值的加和：
\begin_inset Formula $w(M,n)=0.42-0.5cos(2\pi n/(M-1))+0.08cos(4\pi n/(M-1))$
\end_inset

，其中，n取值范围是0到M-1
\end_layout

\begin_deeper
\begin_layout Standard
M=42;window=np.blackman(M)#从图形上看，blackman window像正态分布
\end_layout

\end_deeper
\begin_layout Itemize
汉明窗口(Hamming window)形式上是一个加权的余弦函数：
\begin_inset Formula $w(M,n)=0.54-0.46cos(2\pi n/(M-1))$
\end_inset

，其中，n取值范围是0到M-1
\end_layout

\begin_deeper
\begin_layout Standard
M=42;window=np.hamming(M)#从图形上看，也像正态
\end_layout

\end_deeper
\begin_layout Itemize
凯泽窗口(Kaiser window)是以贝塞尔函数(Bessel function)定义的：
\begin_inset Formula $w(M,n)=I_{0}(\beta\sqrt{1-(\frac{n-\alpha}{\alpha})^{2}})/I_{0}(\beta)$
\end_inset

，其中
\begin_inset Formula $I_{0}$
\end_inset

是零阶贝塞尔函数，
\begin_inset Formula $\alpha=(M-1)/2$
\end_inset

，numpy中np.kaiser(M,β)返回凯泽窗口
\end_layout

\begin_deeper
\begin_layout Itemize
M=42;window=np.kaiser(M,14)#也像正态
\end_layout

\end_deeper
\begin_layout Section
质量控制
\end_layout

\end_body
\end_document
