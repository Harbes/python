data()
data("rivers")
ls
head(rivers)
summary(rivers)
stem(rivers)
stem(log(rivers))
hist(rivers,col="#333333",border="white",breaks = 40)
hist(rivers,col="#333333",border="white",breaks = 25)
data(rivers)
hist(rivers,col="#333333",border = "white",breaks = 25)
data(rivers)
hist(rivers,col="#333333",border="white",breaks=25)
data(rivers)
hist(log(rivers),col="#888888",border="white",breaks=25)
plot(cars)
plot(cars)
x=1:10
y=x+rnorm(10,0,1)
fit=lm(y~x)
summary(fit)
x=1:10
y=x+rnorm(10,0,1)
fit=lm(y~x)
summary(fit)
plot(x)
x=1:10
y=x+rnorm(10,0,1)
fit=lm(y~x)
summary(fit)
plot(y)
data("discoveries")
plot(discoveries,col="#333333",lwd=3,xlab="Year",main="Number of important discoveries per year")
data("discoveries")
plot(discoveries,col="#333333",lwd=0.3,xlab="Year",main="Number of important discoveries per year")
y=runif(1000,min=0,max=1)
r_y=round(y)
plot(y)
plot(r_y)
5L
5L
class(5L)
5L
class(5L)
5L*6
1+2.0
6.66-0.06
6*8
9/5
10%%3
1+2.0
6.66-0.06
6*8
9/5
10%3
class(NaN)
class(Inf)
class(NA)
class(NULL)
class(NaN)
class(Inf)
class(NA)
class(NULL)
integrate(dnorm(x),3,Inf)
class(NaN)
class(Inf)
class(NA)
class(NULL)
integrate(dnorm,3,Inf)
class(NaN)
class(Inf)
class(NA)
class(NULL)
integrate(dnorm,-3,Inf)
c(1,2,3,4,5,6,7,8)
c('a','b','c','d')
c('a','b','c','d')=='abcd'
c('a','b','c','d')=='a'
1:1:10
1:1:10
1:1 10
1:1:10
1:1:10
1:.1:10
1:0.1:10
1:0.1:10
1:0.1:10
1:0.1:10
1:2:10
1:2:10
1:2:10
1:3:10
1:100:10
1:10
seq(from=0,to=100,by=2)
letters
month.abb
1:10
seq(from=0,to=100,by=2)
letters
LETTERS
month
1:10
seq(from=0,to=100,by=2)
letters
LETTERS
month.name
month.abb
letters[8]
month.name[8]
c(1,2,3,4,5,6,7,8)[8]
1:10[8]
letters[8]
month.name[8]
c(1,2,3,4,5,6,7,8)[8]
(1:10)[8]
seq(from=0,to=100,by=2)[8]
’Harbes‘
'Harbes'
class('Harbes')
substr("My name is Harbes",12,18)
gsub('a','A',"My name is Harbes")
NA==FALSE
0==FALSE
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE!=FALSE
TRUE!=NA
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE=c()
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE=c(0)
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE==c()
TRUE!=FALSE
TRUE!=NA
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE==c(0)
TRUE!=FALSE
TRUE!=NA
class(TRUE)
class(FALSE)
class(NA)
TRUE==TRUE
TRUE==1
TRUE==c(0)
TRUE!=FALSE
TRUE!=NA# use "is.na" to check whether expression evaluates NA
is.na(NA)
list=c(1,2,3,'a',1,2,3,'a','b','c')
factor(list)
class(list[4])
class(list[3])
class(list[3])
class(list[3])
class(list[1])
list=c(1,2,3,'a',1,2,3,'a','b','c')
list2=c(1,2,3)
factor(list)
list=c(1,2,3,'a',1,2,3,'a','b','c')
list2=c(1,2,3)
factor(list)
class(list2[1])
class(list[1])
class(list2[1])
list=c(1,2,3,'a',1,2,3,'a','b','c')
list2=c(1,2,3)
f=factor(list)
levels(f)
data(infert)
infert$education
x=5
y<- "1" #推荐
1->z #可行，但很怪
as.numeric(y)
as.character(x)
for (i in 1:8){
print(i)
}
for (i in 1:8){print(i)}
for (i in 1:9){print(i)}
for (i in 1:8){
print(i)
}
#或者
for (i in 1:9){print(i)}
a=10
while(a>0){cat(a,"...",sep='');a=a-1}
a=10
while(a>0){cat(a,"...",sep='');a=a-1}
#或者
while(a>-10){
cat(a,"...",sep='')
a=a-1
}
if (4>3){
print('Yes!')
}else{
print('No!')
}
jiggle=function(x){
x=x+rnorm(1,sd=.1)
return(x)
}
set.seed(2716057)
jiggle(5)
vec(1,2,3,4)
vec=c(1,2,3,4)
c(TRUE,8)
c('Harbes',TRUE,8)
vec[1]
which(vec%%2==0)
head(vec,1)
tail(vec,1)
vec[6]#c超出索引范围，NA
length(vec)
vec[2:3]
vec*4
mean(vec)
sum(vec)
var(vec)
sd(vec)
max(vec)
min(vec)
mean(vec)
sum(vec)
var(vec)
sd(vec)
(sd(vec))^2==var(vec)
max(vec)
min(vec)
mean(vec)
sum(vec)
var(vec)
sd(vec)
(sd(vec))^2-var(vec)
max(vec)
min(vec)
mean(vec)
sum(vec)
var(vec)
sd(vec)
abs(sd(vec))^2-var(vec))<1e-8
mean(vec)
sum(vec)
var(vec)
sd(vec)
abs((sd(vec))^2-var(vec))<1e-8
max(vec)
min(vec)
mat=matrix(nrow=6,ncol=8,1:48)
mat=matrix(nrow=6,ncol=8,1:48)
mat
mat=matrix(nrow=6,ncol=8,1:48)
mat
calss(mat)
mat=matrix(nrow=6,ncol=8,1:48)
mat
class(mat)
mat[1,]
mat[,1]
mat[6,6]
t(mat)
mat=matrix(nrow=6,ncol=8,1:48)
mat
class(mat)
mat[1,]
mat[,1]
mat[6,6]
t(mat)
mat2=cbind(matrix(nrow=2,ncol=2,1:8),6:10)#把两个矩阵按列合并
mat=matrix(nrow=6,ncol=8,1:48)
mat
class(mat)
mat[1,]
mat[,1]
mat[6,6]
t(mat)
mat2=cbind(matrix(nrow=4,ncol=2,1:8),6:10)#把两个矩阵按列合并
mat=matrix(nrow=6,ncol=8,1:48)
mat
class(mat)
mat[1,]
mat[,1]
mat[6,6]
t(mat)
mat2=cbind(matrix(nrow=4,ncol=2,1:8),7:10)#把两个矩阵按列合并
mat=matrix(nrow=6,ncol=8,1:48)
mat
class(mat)
mat[1,]
mat[,1]
mat[6,6]
t(mat)
mat2=cbind(matrix(nrow=4,ncol=2,1:8),7:10)#把两个矩阵按列合并
mat2
df=data.frame(c(6,7,8,9),c('dog','cat','bird','dog'))
names(df)=c('number','species')
class(df)
df
df=data.frame(c(6,7,8,9),c('dog','cat','bird','dog'))
names(df)=c('number','species')
class(df)
df
df$number
class(df$number)
df[,2]
class(df[,2])
df=data.frame(c(6,7,8,9),c('dog','cat','bird','dog'))
names(df)=c('number','species')
class(df)
df
df$number
df[,1]
df[,'number']
class(df$number)
df[,2]
class(df[,2])
array(c(c(1,2,3,4),c(8,9,3,6)),dim=c(2,4))
array(c(c(c(2,300,4),c(8,9,0)),c(c(5,6,0),c(66,7,8))),dim=c(3,2,2))
list1=list(time=1:40)
list1
list1$price=c(rnorm(40,0.5*list1$time,4))
list1=list(time=1:40)
#list1
list1$price=c(rnorm(40,0.5*list1$time,4))
list1
list1=list(time=1:40)
#list1
list1$price=c(rnorm(40,0.5*list1$time,4))
list1
plot(list1$time,list1$price)
apply(mat,MAR=2,myFunc)
apply(mat,MAR=2,dnorm)
mat
apply(mat,MAR=2,dnorm)
mat
apply(mat,MAR=2,add)
mat
myFun=function(x,y){return(x+y)}
apply(mat,MAR=2,myFun)
mat
myFun=function(x){return(x%%2)}
apply(mat,MAR=2,myFun)
mat
myFun=function(x){return(x%%2)}
apply(mat,MAR=2,myFun)
?lapply
?sapply
pets=read.csv("http://learnxinyminutes.com/docs/pets.csv")
head(pets,2)#前两行
write.csv(pets,"pets.csv")
getwd()
plot(list1$time,list1$price,main='fake data')
linearModel=lm(price~time,data=list1)
linearModel#拟合结果
abline(linearModel,col='red')#展示拟合结果
linearModel=lm(price~time,data=list1)
linearModel#拟合结果
#abline(linearModel,col='red')#展示拟合结果
plot(linearModel)
hist(rpois(n=10000,lambda=5),col='thistle')
barplot(c(1,4,5,1,2),names.arg=c('red','blue','purple','green','yellow'))
